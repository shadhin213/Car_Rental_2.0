@{
    ViewData["Title"] = "Available Cars";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="page-header bg-primary text-white p-4 rounded mb-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h1 class="display-4">
                            <i class="bi bi-car-front"></i> Fleet Overview
                        </h1>
                        <p class="lead">Browse our complete fleet of vehicles with their current status</p>
                    </div>
                    <div>
                        @{
                            var role = Context.Session.GetString("UserRole");
                        }
                        @if (string.Equals(role, "Customer", StringComparison.OrdinalIgnoreCase))
                        {
                            <a href="@Url.Action("CustomerDashboard", "Home")" class="btn btn-outline-light btn-lg">
                                <i class="bi bi-arrow-left"></i> Back to Dashboard
                            </a>
                        }
                        @* For non-customers, no button is shown (Fleet Management hidden) *@
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Success Message -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="bi bi-check-circle"></i> @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            </div>
        </div>
    }

    

    <!-- Filter Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0"><i class="bi bi-funnel"></i> Filter Cars</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <label for="vehicleType" class="form-label">Vehicle Type</label>
                            <select class="form-select" id="vehicleType">
                                <option value="">All Types</option>
                                <option value="motor-bike">Motor Bike</option>
                                <option value="cng">CNG</option>
                                <option value="private-car">Private Car</option>
                                <option value="pickup">Pickup</option>
                                <option value="truck">Truck</option>
                                <option value="covered-van">Covered Van</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="priceRange" class="form-label">Price Range</label>
                            <select class="form-select" id="priceRange">
                                <option value="">All Prices</option>
                                <option value="0-50">$0 - $50/day</option>
                                <option value="50-100">$50 - $100/day</option>
                                <option value="100-200">$100 - $200/day</option>
                                <option value="200+">$200+/day</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="transmission" class="form-label">Transmission</label>
                            <select class="form-select" id="transmission">
                                <option value="">All</option>
                                <option value="automatic">Automatic</option>
                                <option value="manual">Manual</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="fuelType" class="form-label">Fuel Type</label>
                            <select class="form-select" id="fuelType">
                                <option value="">All</option>
                                <option value="petrol">Petrol</option>
                                <option value="diesel">Diesel</option>
                                <option value="electric">Electric</option>
                                <option value="hybrid">Hybrid</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Cars Grid -->
    <div class="row" id="carsGrid">
        @{
            var allVehicles = ViewBag.Vehicles as List<CarRentalManagementSystem.Models.VehicleViewModel> ?? new List<CarRentalManagementSystem.Models.VehicleViewModel>();
            var vehicles = allVehicles.Where(v => v.Status?.ToLower() == "available").ToList();
        }
        
        @if (vehicles.Any())
        {
            @foreach (var vehicle in vehicles)
            {
                <div class="col-lg-4 col-md-6 mb-4 vehicle-item" 
                     data-vehicle-type="@vehicle.VehicleType.ToLower().Replace(" ", "-")"
                     data-price="@vehicle.DailyRate"
                     data-fuel="@vehicle.FuelType.ToLower()">
                    <div class="card h-100 shadow-sm">
                        <div class="card-img-top bg-light text-center p-4 position-relative">
                            @if (!string.IsNullOrEmpty(vehicle.ImageUrl))
                            {
                                <img src="@vehicle.ImageUrl" alt="@vehicle.Model" class="img-fluid" style="max-height: 200px; object-fit: cover;">
                            }
                            else
                            {
                                @switch (vehicle.VehicleType.ToLower())
                                {
                                    case "motor bike":
                                        <i class="bi bi-bicycle" style="font-size: 4rem; color: #6f42c1;"></i>
                                        break;
                                    case "cng":
                                        <i class="bi bi-fuel-pump" style="font-size: 4rem; color: #28a745;"></i>
                                        break;
                                    case "private car":
                                        <i class="bi bi-car-front" style="font-size: 4rem; color: #007bff;"></i>
                                        break;
                                    case "pickup":
                                        <i class="bi bi-truck" style="font-size: 4rem; color: #ffc107;"></i>
                                        break;
                                    case "truck":
                                        <i class="bi bi-truck" style="font-size: 4rem; color: #fd7e14;"></i>
                                        break;
                                    case "covered van":
                                        <i class="bi bi-van" style="font-size: 4rem; color: #dc3545;"></i>
                                        break;
                                    default:
                                        <i class="bi bi-car-front" style="font-size: 4rem; color: #6c757d;"></i>
                                        break;
                                }
                            }
                            <span class="badge @(vehicle.Status?.ToLower() switch { 
                                "available" => "bg-success", 
                                "rented" => "bg-warning", 
                                "maintenance" => "bg-info", 
                                "out-of-service" => "bg-danger",
                                _ => "bg-secondary"
                            }) status-badge position-absolute top-0 end-0 m-2">
                                @vehicle.Status
                            </span>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@vehicle.Model</h5>
                            <p class="card-text text-muted">
                                @vehicle.VehicleType
                            </p>
                        </div>
                        <div class="card-footer bg-transparent">
                            <div class="d-flex gap-2">
                                <button class="btn btn-outline-primary flex-fill" onclick="viewVehicleDetails(@vehicle.Id)">
                                    <i class="bi bi-eye"></i> Vehicle Details
                                </button>
                                @if (vehicle.Status?.ToLower() == "available")
                                {
                                    @if (Context.Session.GetString("UserId") != null)
                                    {
                                        <button class="btn btn-primary flex-fill" onclick="openRentalModal(@vehicle.Id)">
                                            <i class="bi bi-calendar-plus"></i> Rent Now
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-warning flex-fill" onclick="openRentalModal(@vehicle.Id)" title="Login required to rent">
                                            <i class="bi bi-lock"></i> Login to Rent
                                        </button>
                                    }
                                }
                                else
                                {
                                    <button class="btn btn-secondary flex-fill" disabled>
                                        <i class="bi bi-clock"></i> @(vehicle.Status?.ToLower() == "rented" ? "Currently Rented" : 
                                                                       vehicle.Status?.ToLower() == "maintenance" ? "Under Maintenance" : 
                                                                       vehicle.Status?.ToLower() == "out-of-service" ? "Out of Service" : "Unavailable")
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center">
                <div class="alert alert-info">
                    <i class="bi bi-info-circle"></i> No vehicles available at the moment. Please check back later.
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    <div class="row">
        <div class="col-12">
            <nav aria-label="Cars pagination">
                <ul class="pagination justify-content-center">
                    <li class="page-item disabled">
                        <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
                    </li>
                    <li class="page-item active"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- Vehicle Details Modal -->
<div class="modal fade" id="vehicleDetailsModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">
                    <i class="bi bi-car-front"></i> Vehicle Details
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="vehicleDetailsContent">
                <!-- Content will be loaded dynamically -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Rental Modal -->
<div class="modal fade" id="rentalModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">
                    <i class="bi bi-calendar-check"></i> Rent Vehicle
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <!-- Vehicle Information -->
                    <div class="col-md-4">
                        <div class="card h-100">
                            <div class="card-header bg-light">
                                <h6 class="mb-0"><i class="bi bi-car-front"></i> Vehicle Details</h6>
                            </div>
                            <div class="card-body" id="rentalVehicleInfo">
                                <!-- Vehicle info will be loaded here -->
                            </div>
                        </div>
                    </div>
                    
                    <!-- Rental Form -->
                    <div class="col-md-8">
                        <form id="rentalForm">
                            <input type="hidden" id="rentalVehicleId" name="vehicleId">
                            
                            <!-- Rental Period -->
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label for="rentalStartDate" class="form-label">Start Date <span class="text-danger">*</span></label>
                                    <input type="date" class="form-control" id="rentalStartDate" name="startDate" required>
                                </div>
                                <div class="col-md-6">
                                    <label for="rentalEndDate" class="form-label">End Date <span class="text-danger">*</span></label>
                                    <input type="date" class="form-control" id="rentalEndDate" name="endDate" required>
                                </div>
                            </div>
                            
                            <!-- Customer Information -->
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label for="customerName" class="form-label">Full Name <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="customerName" name="customerName" required>
                                </div>
                                <div class="col-md-6">
                                    <label for="customerEmail" class="form-label">Email <span class="text-danger">*</span></label>
                                    <input type="email" class="form-control" id="customerEmail" name="customerEmail" required>
                                </div>
                            </div>
                            
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label for="customerPhone" class="form-label">Phone Number <span class="text-danger">*</span></label>
                                    <input type="tel" class="form-control" id="customerPhone" name="customerPhone" required>
                                </div>
                                <div class="col-md-6">
                                    <label for="customerLicense" class="form-label">Driver's License <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="customerLicense" name="customerLicense" required>
                                </div>
                            </div>
                            
                            <!-- Rental Terms & Conditions -->
                            <div class="card mb-3">
                                <div class="card-header">
                                    <h6 class="mb-0"><i class="bi bi-file-text"></i> Rental Terms & Conditions</h6>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <h6 class="text-primary">Rental Features:</h6>
                                            <ul class="list-unstyled">
                                                <li><i class="bi bi-check-circle text-success"></i> 24/7 Roadside Assistance</li>
                                                <li><i class="bi bi-check-circle text-success"></i> Free Insurance Coverage</li>
                                                <li><i class="bi bi-check-circle text-success"></i> Unlimited Mileage</li>
                                                <li><i class="bi bi-check-circle text-success"></i> GPS Navigation System</li>
                                                <li><i class="bi bi-check-circle text-success"></i> Emergency Contact Support</li>
                                                <li><i class="bi bi-check-circle text-success"></i> Vehicle Maintenance Included</li>
                                            </ul>
                                        </div>
                                        <div class="col-md-6">
                                            <h6 class="text-warning">Important Conditions:</h6>
                                            <ul class="list-unstyled small">
                                                <li><i class="bi bi-exclamation-triangle text-warning"></i> Minimum rental period: 1 day</li>
                                                <li><i class="bi bi-exclamation-triangle text-warning"></i> Maximum rental period: 30 days</li>
                                                <li><i class="bi bi-exclamation-triangle text-warning"></i> Valid driver's license required</li>
                                                <li><i class="bi bi-exclamation-triangle text-warning"></i> Age requirement: 21+ years</li>
                                                <li><i class="bi bi-exclamation-triangle text-warning"></i> Security deposit: $200</li>
                                                <li><i class="bi bi-exclamation-triangle text-warning"></i> Late return fee: $50/day</li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Rental Summary -->
                            <div class="card mb-3">
                                <div class="card-header">
                                    <h6 class="mb-0"><i class="bi bi-calculator"></i> Rental Summary</h6>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="d-flex justify-content-between">
                                                <span>Daily Rate:</span>
                                                <span id="dailyRate">$0.00</span>
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <span>Number of Days:</span>
                                                <span id="rentalDays">0</span>
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <span>Subtotal:</span>
                                                <span id="subtotal">$0.00</span>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="d-flex justify-content-between">
                                                <span>Security Deposit:</span>
                                                <span>$200.00</span>
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <span>Tax (10%):</span>
                                                <span id="taxAmount">$0.00</span>
                                            </div>
                                            <hr>
                                            <div class="d-flex justify-content-between fw-bold">
                                                <span>Total Amount:</span>
                                                <span id="totalAmount">$200.00</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Agreement Checkbox -->
                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" id="agreeTerms" required>
                                <label class="form-check-label" for="agreeTerms">
                                    I agree to the <a href="#" data-bs-toggle="modal" data-bs-target="#termsModal">Terms and Conditions</a> and understand the rental policies.
                                </label>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" onclick="processRental()">
                    <i class="bi bi-credit-card"></i> Confirm Rental
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Terms and Conditions Modal -->
<div class="modal fade" id="termsModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Terms and Conditions</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <h6>Rental Agreement Terms:</h6>
                <ol>
                    <li><strong>Driver Requirements:</strong> Must be at least 21 years old with a valid driver's license.</li>
                    <li><strong>Rental Period:</strong> Minimum 1 day, maximum 30 days per rental.</li>
                    <li><strong>Payment:</strong> Full payment required at the time of rental, including security deposit.</li>
                    <li><strong>Insurance:</strong> Basic insurance included. Additional coverage available for purchase.</li>
                    <li><strong>Vehicle Return:</strong> Vehicle must be returned on time and in the same condition as received.</li>
                    <li><strong>Late Fees:</strong> $50 per day for late returns after the agreed return date.</li>
                    <li><strong>Damage Policy:</strong> Customer is responsible for any damage beyond normal wear and tear.</li>
                    <li><strong>Cancellation:</strong> Free cancellation up to 24 hours before rental start date.</li>
                    <li><strong>Fuel Policy:</strong> Vehicle must be returned with the same fuel level as received.</li>
                    <li><strong>Prohibited Use:</strong> No smoking, pets, or off-road driving allowed.</li>
                </ol>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Login Required Modal -->
<div class="modal fade" id="loginRequiredModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title">
                    <i class="bi bi-exclamation-triangle"></i> Login Required
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body text-center">
                <div class="mb-4">
                    <i class="bi bi-person-x-circle text-warning" style="font-size: 4rem;"></i>
                </div>
                <h4 class="text-dark mb-3">Please Login to Rent a Car</h4>
                <p class="text-muted mb-4">
                    You need to be logged in to rent a vehicle. Please create an account or login to continue with your rental.
                </p>
                <div class="row g-3">
                    <div class="col-6">
                        <a href="@Url.Action("Login", "Account")" class="btn btn-primary w-100">
                            <i class="bi bi-box-arrow-in-right"></i> Login
                        </a>
                    </div>
                    <div class="col-6">
                        <a href="@Url.Action("Register", "Account")" class="btn btn-success w-100">
                            <i class="bi bi-person-plus"></i> Register
                        </a>
                    </div>
                </div>
                <div class="mt-4">
                    <small class="text-muted">
                        <i class="bi bi-info-circle"></i> 
                        Registration is quick and free. You'll be able to rent vehicles immediately after creating your account.
                    </small>
                </div>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle"></i> Cancel
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Profile Completion Modal -->
<div class="modal fade" id="profileCompletionModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title">
                    <i class="bi bi-person-check"></i> Complete Your Profile
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body text-center">
                <div class="mb-4">
                    <i class="bi bi-person-x text-info" style="font-size: 4rem;"></i>
                </div>
                <h4 class="text-dark mb-3">Profile Incomplete</h4>
                <p class="text-muted mb-4" id="profileCompletionMessage">
                    Please complete your profile to rent a car. Complete Driving Information and Documents & Images sections.
                </p>
                <div class="alert alert-warning text-start">
                    <h6><i class="bi bi-exclamation-triangle"></i> Required Information:</h6>
                    <ul class="mb-0" id="missingInfoList">
                        <li>License Number</li>
                        <li>Driving Experience (Years)</li>
                        <li>Preferred Car Type</li>
                        <li>Driving License Image</li>
                        <li>National ID Image</li>
                    </ul>
                </div>
                <div class="row g-3">
                    <div class="col-6">
                        <a href="@Url.Action("Profile", "Home")" class="btn btn-primary w-100">
                            <i class="bi bi-person-gear"></i> Complete Profile
                        </a>
                    </div>
                    <div class="col-6">
                        <button type="button" class="btn btn-secondary w-100" data-bs-dismiss="modal">
                            <i class="bi bi-x-circle"></i> Cancel
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .status-badge {
            font-size: 0.8rem;
            font-weight: 600;
            padding: 0.5rem 0.75rem;
        }
        
        .card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }
        
        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }
        

        
        .vehicle-item[style*="none"] {
            display: none !important;
        }
        
        /* Enhanced Vehicle Details Modal Styling */
        .vehicle-info-section {
            padding: 1rem 0;
        }
        
        .info-card {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 1rem;
            height: 100%;
            transition: all 0.2s ease-in-out;
        }
        
        .info-card:hover {
            background: #e9ecef;
            border-color: #dee2e6;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .info-card.highlight {
            background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
            border-color: #2196f3;
        }
        
        .info-card.highlight:hover {
            background: linear-gradient(135deg, #bbdefb 0%, #90caf9 100%);
        }
        
        .modal-body {
            padding: 2rem;
        }
        
        .modal-body img {
            border: 3px solid #f8f9fa;
            transition: all 0.3s ease-in-out;
        }
        
        .modal-body img:hover {
            border-color: #007bff;
            transform: scale(1.02);
        }
        
        /* Clean card appearance for minimal view */
        .card-body {
            padding: 1rem;
        }
        
        .card-title {
            margin-bottom: 0.5rem;
            font-size: 1.1rem;
            font-weight: 600;
        }
        
        .card-text.text-muted {
            margin-bottom: 0;
            font-size: 0.9rem;
        }
        
        /* Rental Modal Styling */
        .modal-xl {
            max-width: 1200px;
        }
        
        .rental-feature-list li {
            padding: 0.25rem 0;
        }
        
        .rental-conditions-list li {
            padding: 0.25rem 0;
            font-size: 0.9rem;
        }
        
        .rental-summary-card {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border: 1px solid #dee2e6;
        }
        
        .rental-summary-card .card-header {
            background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
            color: white;
        }
        
        .terms-conditions-card {
            border-left: 4px solid #28a745;
        }
        
        .rental-form-section {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 1.5rem;
        }
        
        .vehicle-info-card {
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
            border: 1px solid #e9ecef;
        }
        
        .vehicle-info-card .card-header {
            background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
            color: white;
        }
        
        .form-label {
            font-weight: 600;
            color: #495057;
        }
        
        .required-field::after {
            content: " *";
            color: #dc3545;
            font-weight: bold;
        }
        
        /* Login Required Modal Styling */
        .login-required-modal .modal-content {
            border: none;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
        }
        
        .login-required-modal .modal-header {
            border-radius: 15px 15px 0 0;
            border-bottom: none;
        }
        
        .login-required-modal .modal-body {
            padding: 2rem;
        }
        
        .login-required-modal .btn {
            border-radius: 8px;
            font-weight: 600;
            padding: 0.75rem 1.5rem;
        }
        
        .login-required-modal .btn-primary {
            background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
            border: none;
        }
        
        .login-required-modal .btn-success {
            background: linear-gradient(135deg, #28a745 0%, #1e7e34 100%);
            border: none;
        }
        
        .login-required-modal .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
        }
    </style>
}

@section Scripts {
    <script>
        let currentVehicleId = null;
        
        // Add filter functionality
        document.addEventListener('DOMContentLoaded', function() {
            const filterSelects = document.querySelectorAll('select');
            const vehicleItems = document.querySelectorAll('.vehicle-item');
            
            function filterVehicles() {
                const vehicleType = document.getElementById('vehicleType').value;
                const priceRange = document.getElementById('priceRange').value;
                const fuelType = document.getElementById('fuelType').value;
                
                vehicleItems.forEach(item => {
                    let show = true;
                    
                    // Filter by vehicle type
                    if (vehicleType && item.dataset.vehicleType !== vehicleType) {
                        show = false;
                    }
                    
                    // Filter by price range
                    if (priceRange) {
                        const price = parseFloat(item.dataset.price);
                        switch (priceRange) {
                            case '0-50':
                                if (price > 50) show = false;
                                break;
                            case '50-100':
                                if (price < 50 || price > 100) show = false;
                                break;
                            case '100-200':
                                if (price < 100 || price > 200) show = false;
                                break;
                            case '200+':
                                if (price < 200) show = false;
                                break;
                        }
                    }
                    
                    // Filter by fuel type
                    if (fuelType && item.dataset.fuel !== fuelType) {
                        show = false;
                    }
                    
                    // Show/hide item
                    item.style.display = show ? 'block' : 'none';
                });
                
                // Update count
                const visibleCount = document.querySelectorAll('.vehicle-item[style*="block"], .vehicle-item:not([style*="none"])').length;
                console.log(`Showing ${visibleCount} vehicles`);
            }
            
            filterSelects.forEach(select => {
                select.addEventListener('change', filterVehicles);
            });
            
            // Initial filter
            filterVehicles();
        });
        
        // Vehicle Details Modal Functions
        function viewVehicleDetails(vehicleId) {
            currentVehicleId = vehicleId;
            
            // Find vehicle data from the current page
            const allVehicles = @Html.Raw(Json.Serialize(allVehicles));
            const vehicle = allVehicles.find(v => v.id === vehicleId);
            
            if (vehicle) {
                const content = `
                    <div class="row">
                        <div class="col-md-5">
                            <div class="text-center mb-3">
                                <img src="${vehicle.imageUrl || '/images/default-vehicle.jpg'}" 
                                     class="img-fluid rounded shadow" 
                                     style="max-height: 300px; object-fit: cover;"
                                     alt="${vehicle.model}"
                                     onerror="this.src='/images/default-vehicle.jpg'">
                            </div>
                            <div class="text-center">
                                <span class="badge fs-6 ${vehicle.status === 'Available' ? 'bg-success' : vehicle.status === 'Rented' ? 'bg-warning' : 'bg-danger'}">
                                    ${vehicle.status}
                                </span>
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="vehicle-info-section">
                                <h3 class="text-primary mb-3">${vehicle.model}</h3>
                                <p class="text-muted fs-5 mb-4">${vehicle.vehicleType} • ${vehicle.year}</p>
                                
                                <div class="row g-3 mb-4">
                                    <div class="col-6">
                                        <div class="info-card">
                                            <small class="text-muted d-block">Registration Number</small>
                                            <strong class="fs-6">${vehicle.registrationNumber}</strong>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="info-card">
                                            <small class="text-muted d-block">Chassis Number</small>
                                            <strong class="fs-6">${vehicle.chassisNumber}</strong>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="row g-3 mb-4">
                                    <div class="col-6">
                                        <div class="info-card">
                                            <small class="text-muted d-block">Color</small>
                                            <strong class="fs-6">${vehicle.color}</strong>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="info-card">
                                            <small class="text-muted d-block">Engine Capacity</small>
                                            <strong class="fs-6">${vehicle.engineCapacity}</strong>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="row g-3 mb-4">
                                    <div class="col-6">
                                        <div class="info-card">
                                            <small class="text-muted d-block">Fuel Type</small>
                                            <strong class="fs-6">${vehicle.fuelType}</strong>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="info-card">
                                            <small class="text-muted d-block">Number of Seats</small>
                                            <strong class="fs-6">${vehicle.seats || 'N/A'}</strong>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="row g-3 mb-4">
                                    <div class="col-6">
                                        <div class="info-card highlight">
                                            <small class="text-muted d-block">Daily Rate</small>
                                            <strong class="fs-4 text-success">$${vehicle.dailyRate}</strong>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="info-card">
                                            <small class="text-muted d-block">Vehicle ID</small>
                                            <strong class="fs-6">#${vehicle.id}</strong>
                                        </div>
                                    </div>
                                </div>
                                
                                ${vehicle.description ? `
                                <div class="mb-4">
                                    <div class="info-card">
                                        <small class="text-muted d-block">Description</small>
                                        <p class="mb-0 mt-2">${vehicle.description}</p>
                                    </div>
                                </div>
                                ` : ''}
                                
                                ${vehicle.features && vehicle.features.length > 0 ? `
                                <div class="mb-4">
                                    <div class="info-card">
                                        <small class="text-muted d-block mb-2">Features</small>
                                        <div class="d-flex flex-wrap gap-2">
                                            ${vehicle.features.map(feature => `<span class="badge bg-primary">${feature}</span>`).join('')}
                                        </div>
                                    </div>
                                </div>
                                ` : ''}
                            </div>
                        </div>
                    </div>
                `;
                
                document.getElementById('vehicleDetailsContent').innerHTML = content;
                const modal = new bootstrap.Modal(document.getElementById('vehicleDetailsModal'));
                modal.show();
            }
        }
        
        // Check if user is authenticated
        function isUserAuthenticated() {
            return @(Context.Session.GetString("UserId") != null ? "true" : "false");
        }
        
        // Show login required modal
        function showLoginRequiredModal() {
            const modal = new bootstrap.Modal(document.getElementById('loginRequiredModal'));
            modal.show();
        }
        
        function showProfileCompletionModal(response) {
            // Update the message
            document.getElementById('profileCompletionMessage').textContent = response.message;
            
            // Update the missing info list based on what's incomplete
            const missingInfoList = document.getElementById('missingInfoList');
            missingInfoList.innerHTML = '';
            
            if (!response.isDrivingInfoComplete) {
                missingInfoList.innerHTML += '<li><strong>Driving Information:</strong></li>';
                missingInfoList.innerHTML += '<li>• License Number</li>';
                missingInfoList.innerHTML += '<li>• Driving Experience (Years)</li>';
                missingInfoList.innerHTML += '<li>• Preferred Car Type</li>';
            }
            
            if (!response.isDocumentsComplete) {
                missingInfoList.innerHTML += '<li><strong>Documents & Images:</strong></li>';
                missingInfoList.innerHTML += '<li>• Driving License Image</li>';
                missingInfoList.innerHTML += '<li>• National ID Image</li>';
            }
            
            const modal = new bootstrap.Modal(document.getElementById('profileCompletionModal'));
            modal.show();
        }
        
        // Rental Modal Functions
        function openRentalModal(vehicleId) {
            // Check if user is logged in
            if (!isUserAuthenticated()) {
                showLoginRequiredModal();
                return;
            }
            
            // Check profile completion before allowing rental
            checkProfileCompletion(vehicleId);
        }
        
        function checkProfileCompletion(vehicleId) {
            $.ajax({
                url: '@Url.Action("CheckProfileCompletion", "Home")',
                type: 'GET',
                success: function(response) {
                    if (response.success) {
                        if (response.isProfileComplete) {
                            // Profile is complete, proceed with rental modal
                            openRentalModalInternal(vehicleId);
                        } else {
                            // Profile is incomplete, show completion message
                            showProfileCompletionModal(response);
                        }
                    } else {
                        alert('Error checking profile: ' + response.message);
                    }
                },
                error: function() {
                    alert('An error occurred while checking your profile.');
                }
            });
        }
        
        function openRentalModalInternal(vehicleId) {
            currentVehicleId = vehicleId;
            
            // Find vehicle data from the current page
            const allVehicles = @Html.Raw(Json.Serialize(allVehicles));
            const vehicle = allVehicles.find(v => v.id === vehicleId);
            
            if (vehicle) {
                // Populate vehicle info in rental modal
                const vehicleInfo = `
                    <div class="text-center mb-3">
                        <img src="${vehicle.imageUrl || '/images/default-vehicle.jpg'}" 
                             class="img-fluid rounded shadow" 
                             style="max-height: 150px; object-fit: cover;"
                             alt="${vehicle.model}"
                             onerror="this.src='/images/default-vehicle.jpg'">
                    </div>
                    <h6 class="text-primary">${vehicle.model}</h6>
                    <p class="text-muted small">${vehicle.vehicleType} • ${vehicle.year}</p>
                    <div class="mb-2">
                        <small class="text-muted">Registration:</small><br>
                        <strong>${vehicle.registrationNumber}</strong>
                    </div>
                    <div class="mb-2">
                        <small class="text-muted">Color:</small><br>
                        <strong>${vehicle.color}</strong>
                    </div>
                    <div class="mb-2">
                        <small class="text-muted">Fuel Type:</small><br>
                        <strong>${vehicle.fuelType}</strong>
                    </div>
                    <div class="mb-2">
                        <small class="text-muted">Daily Rate:</small><br>
                        <strong class="text-success fs-5">$${vehicle.dailyRate}</strong>
                    </div>
                `;
                
                document.getElementById('rentalVehicleInfo').innerHTML = vehicleInfo;
                document.getElementById('rentalVehicleId').value = vehicleId;
                document.getElementById('dailyRate').textContent = `$${vehicle.dailyRate}`;
                
                // Set minimum date to today
                const today = new Date().toISOString().split('T')[0];
                document.getElementById('rentalStartDate').min = today;
                document.getElementById('rentalEndDate').min = today;
                
                // Clear form
                document.getElementById('rentalForm').reset();
                document.getElementById('rentalVehicleId').value = vehicleId;
                document.getElementById('dailyRate').textContent = `$${vehicle.dailyRate}`;
                
                // Show modal
                const modal = new bootstrap.Modal(document.getElementById('rentalModal'));
                modal.show();
            }
        }
        
        // Calculate rental cost
        function calculateRentalCost() {
            const startDate = new Date(document.getElementById('rentalStartDate').value);
            const endDate = new Date(document.getElementById('rentalEndDate').value);
            const dailyRate = parseFloat(document.getElementById('dailyRate').textContent.replace('$', ''));
            
            if (startDate && endDate && !isNaN(dailyRate)) {
                const timeDiff = endDate.getTime() - startDate.getTime();
                const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
                
                if (daysDiff > 0) {
                    const subtotal = daysDiff * dailyRate;
                    const tax = subtotal * 0.10; // 10% tax
                    const total = subtotal + tax + 200; // Security deposit
                    
                    document.getElementById('rentalDays').textContent = daysDiff;
                    document.getElementById('subtotal').textContent = `$${subtotal.toFixed(2)}`;
                    document.getElementById('taxAmount').textContent = `$${tax.toFixed(2)}`;
                    document.getElementById('totalAmount').textContent = `$${total.toFixed(2)}`;
                } else {
                    document.getElementById('rentalDays').textContent = '0';
                    document.getElementById('subtotal').textContent = '$0.00';
                    document.getElementById('taxAmount').textContent = '$0.00';
                    document.getElementById('totalAmount').textContent = '$200.00';
                }
            }
        }
        
        // Process rental booking
        function processRental() {
            const form = document.getElementById('rentalForm');
            const agreeTerms = document.getElementById('agreeTerms').checked;
            
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }
            
            if (!agreeTerms) {
                alert('Please agree to the terms and conditions to proceed.');
                return;
            }
            
            // Validate dates
            const startDate = new Date(document.getElementById('rentalStartDate').value);
            const endDate = new Date(document.getElementById('rentalEndDate').value);
            const today = new Date();
            today.setHours(0, 0, 0, 0);
            
            if (startDate < today) {
                alert('Start date cannot be in the past.');
                return;
            }
            
            if (endDate <= startDate) {
                alert('End date must be after start date.');
                return;
            }
            
            const daysDiff = Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 3600 * 24));
            if (daysDiff > 30) {
                alert('Maximum rental period is 30 days.');
                return;
            }
            
            // Collect form data
            const formData = new FormData(form);
            const rentalData = {
                vehicleId: formData.get('vehicleId'),
                startDate: formData.get('startDate'),
                endDate: formData.get('endDate'),
                customerName: formData.get('customerName'),
                customerEmail: formData.get('customerEmail'),
                customerPhone: formData.get('customerPhone'),
                customerLicense: formData.get('customerLicense'),
                totalAmount: document.getElementById('totalAmount').textContent.replace('$', ''),
                rentalDays: document.getElementById('rentalDays').textContent
            };
            
            // Show confirmation
            if (confirm(`Confirm rental for ${rentalData.rentalDays} days?\nTotal Amount: $${rentalData.totalAmount}`)) {
                // Here you would typically send the data to your backend
                // For now, we'll show a success message
                alert('Rental request submitted successfully! You will receive a confirmation email shortly.');
                
                // Close modal
                const modal = bootstrap.Modal.getInstance(document.getElementById('rentalModal'));
                modal.hide();
                
                // Reset form
                form.reset();
            }
        }
        
        // Add event listeners for date changes
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('rentalStartDate').addEventListener('change', function() {
                const startDate = new Date(this.value);
                const endDateInput = document.getElementById('rentalEndDate');
                endDateInput.min = this.value;
                
                // If end date is before new start date, clear it
                if (endDateInput.value && new Date(endDateInput.value) <= startDate) {
                    endDateInput.value = '';
                }
                
                calculateRentalCost();
            });
            
            document.getElementById('rentalEndDate').addEventListener('change', calculateRentalCost);
        });
        
    </script>
} 