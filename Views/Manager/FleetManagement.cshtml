@{
    ViewData["Title"] = "Fleet Management";
}

<div class="container-fluid">
    <div class="row">
        <!-- Mobile Navigation Toggle -->
        <nav class="navbar navbar-dark bg-dark d-md-none fixed-top">
            <div class="container-fluid">
                <span class="navbar-brand mb-0 h1">Car Rental System</span>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#sidebarMenu" aria-controls="sidebarMenu" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
            </div>
        </nav>

        <!-- Sidebar -->
        <nav class="col-md-3  d-md-block bg-dark sidebar sticky-top vh-100" id="sidebarMenu">
            <div class="position-sticky pt-3">
                <div class="text-center mb-4">
                    <h4 class="text-white">Car Rental System</h4>
                    <p class="text-muted">Welcome, @ViewBag.UserName!</p>
                </div>
                
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link active text-white" href="#">
                            <i class="bi bi-speedometer2"></i> Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="@Url.Action("AvailableCars", "Home")">
                            <i class="bi bi-car-front"></i> Available Cars
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="#">
                            <i class="bi bi-calendar-check"></i> My Rentals
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="@Url.Action("FleetManagement", "Home")">
                            <i class="bi bi-truck"></i> Fleet Management
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="@Url.Action("FinesManagement", "Home")">
                            <i class="bi bi-exclamation-triangle"></i> Fines Management
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="#">
                            <i class="bi bi-people"></i> Customer Management
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="#">
                            <i class="bi bi-credit-card"></i> Transactions
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="#">
                            <i class="bi bi-tag"></i> Promotions
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="#">
                            <i class="bi bi-star"></i> Reviews
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="#">
                            <i class="bi bi-person-circle"></i> Profile
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="#">
                            <i class="bi bi-gear"></i> Settings
                        </a>
                    </li>
                </ul>
                
                <hr class="text-white">
                
                <form asp-controller="Account" asp-action="Logout" method="post" class="mt-3">
                    <button type="submit" class="btn btn-outline-light w-100">
                        <i class="bi bi-box-arrow-right"></i> Logout
                    </button>
                </form>
            </div>
        </nav>

        <!-- Main content -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <!-- Mobile top spacing -->
            <div class="d-md-none" style="height: 60px;"></div>
            
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2 mb-3 mb-md-0">Fleet Management</h1>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <div class="btn-group me-2">
                        <button type="button" class="btn btn-sm btn-outline-secondary">Export Fleet</button>
                        <button type="button" class="btn btn-sm btn-outline-secondary">Print Report</button>
                    </div>
                </div>
            </div>

            <!-- Fleet Management Options -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card shadow">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Fleet Management Operations</h6>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-12 col-sm-6 col-md-3 mb-3">
                                    <div class="card border-left-info h-100">
                                        <div class="card-body text-center">
                                            <i class="bi bi-plus-circle fa-3x text-info mb-3"></i>
                                            <h5 class="card-title">Add New Car</h5>
                                            <p class="card-text">Add a new vehicle to the fleet with complete details</p>
                                            <button class="btn btn-info" data-bs-toggle="modal" data-bs-target="#addCarModal">
                                                <i class="bi bi-plus-circle"></i> Add Car
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3 mb-3">
                                    <div class="card border-left-warning h-100">
                                        <div class="card-body text-center">
                                            <i class="bi bi-pencil-square fa-3x text-warning mb-3"></i>
                                            <h5 class="card-title">Update Car</h5>
                                            <p class="card-text">Modify existing vehicle information and details</p>
                                            <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#updateCarModal">
                                                <i class="bi bi-pencil-square"></i> Update Car
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3 mb-3">
                                    <div class="card border-left-success h-100">
                                        <div class="card-body text-center">
                                            <i class="bi bi-list-ul fa-3x text-success mb-3"></i>
                                            <h5 class="card-title">View All Vehicles</h5>
                                            <p class="card-text">Browse and manage the complete vehicle fleet</p>
                                            <a class="btn btn-success" href="@Url.Action("ViewAllVehicles", "Home")" >
                                                <i class="bi bi-list-ul"></i> View All Vehicles
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3 mb-3">
                                    <div class="card border-left-success h-100">
                                        <div class="card-body text-center">
                                            <i class="bi bi-list-ul fa-3x text-success mb-3"></i>
                                            <h5 class="card-title">View All Cars</h5>
                                            <p class="card-text">Browse and manage the complete vehicle fleet</p>
                                            <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#viewAllCarsModal">
                                                <i class="bi bi-list-ul"></i> View Fleet
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>
</div>

<!-- Add New Car Modal -->
<div class="modal fade" id="addCarModal" tabindex="-1" aria-labelledby="addCarModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title" id="addCarModalLabel">
                    <i class="bi bi-plus-circle"></i> Add New Car to Fleet
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addCarForm">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="vehicleType" class="form-label">Vehicle Type</label>
                            <select class="form-select" id="vehicleType" name="vehicleType" required>
                                <option value="">Select Vehicle Type</option>
                                <option value="motor-bike">Motor Bike</option>
                                <option value="cng">CNG</option>
                                <option value="private-car">Private Car</option>
                                <option value="pickup">Pickup</option>
                                <option value="truck">Truck</option>
                                <option value="covered-van">Covered Van</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="model" class="form-label">Model</label>
                            <input type="text" class="form-control" id="model" name="model" placeholder="e.g., Camry, Civic" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="year" class="form-label">Year</label>
                            <input type="number" class="form-control" id="year" name="year" min="2000" max="2025" placeholder="2024" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="registrationNumber" class="form-label">Registration Number</label>
                            <input type="text" class="form-control" id="registrationNumber" name="registrationNumber" placeholder="e.g., ABC-123" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="chassisNumber" class="form-label">Chassis Number</label>
                            <input type="text" class="form-control" id="chassisNumber" name="chassisNumber" placeholder="e.g., 1HGBH41JXMN109186" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="color" class="form-label">Color</label>
                            <input type="text" class="form-control" id="color" name="color" placeholder="e.g., Red, Blue" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="engineCapacity" class="form-label">Engine Capacity (CC)</label>
                            <input type="text" class="form-control" id="engineCapacity" name="engineCapacity" placeholder="e.g., 100cc, 2400cc" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="fuelType" class="form-label">Fuel Type</label>
                            <select class="form-select" id="fuelType" name="fuelType" required>
                                <option value="">Select Fuel Type</option>
                                <option value="petrol">Petrol</option>
                                <option value="diesel">Diesel</option>
                                <option value="electric">Electric</option>
                                <option value="hybrid">Hybrid</option>
                                <option value="cng">CNG</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="dailyRate" class="form-label">Daily Rate ($)</label>
                            <input type="number" class="form-control" id="dailyRate" name="dailyRate" min="10" step="1" placeholder="50.00" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="seats" class="form-label">Number of Seats</label>
                            <input type="number" class="form-control" id="seats" name="seats" min="1" max="50" placeholder="e.g., 5" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="status" class="form-label">Status</label>
                            <select class="form-select" id="status" name="status" required>
                                <option value="available">Available</option>
                                <option value="rented">Rented</option>
                                <option value="maintenance">Under Maintenance</option>
                                <option value="out-of-service">Out of Service</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="vehicleImage" class="form-label">Upload Image</label>
                            <input type="file" class="form-control" id="vehicleImage" name="vehicleImage" accept="image/*" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" name="description" rows="3" placeholder="Additional details about the vehicle..."></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="features" class="form-label">Features</label>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="ac" name="features" value="ac">
                                    <label class="form-check-label" for="ac">Air Conditioning</label>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="gps" name="features" value="gps">
                                    <label class="form-check-label" for="gps">GPS Navigation</label>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="bluetooth" name="features" value="bluetooth">
                                    <label class="form-check-label" for="bluetooth">Bluetooth</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-info" onclick="submitAddCar()">
                    <i class="bi bi-plus-circle"></i> Add Car
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Update Car Modal -->
<div class="modal fade" id="updateCarModal" tabindex="-1" aria-labelledby="updateCarModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title" id="updateCarModalLabel">
                    <i class="bi bi-pencil-square"></i> Update Car Information
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="updateCarForm">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="updateCarId" class="form-label">Select Car *</label>
                            <select class="form-select" id="updateCarId" name="carId" required>
                                <option value="">Select a car to update</option>
                                <option value="1">Toyota Camry - ABC-123</option>
                                <option value="2">Honda Civic - XYZ-789</option>
                                <option value="3">Ford F-150 - DEF-456</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="updateVehicleType" class="form-label">Vehicle Type *</label>
                            <select class="form-select" id="updateVehicleType" name="vehicleType" required>
                                <option value="">Select Vehicle Type</option>
                                <option value="motor-bike">Motor Bike</option>
                                <option value="cng">CNG</option>
                                <option value="private-car">Private Car</option>
                                <option value="pickup">Pickup</option>
                                <option value="truck">Truck</option>
                                <option value="covered-van">Covered Van</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="updateMake" class="form-label">Make *</label>
                            <input type="text" class="form-control" id="updateMake" name="make" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="updateModel" class="form-label">Model *</label>
                            <input type="text" class="form-control" id="updateModel" name="model" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="updateDailyRate" class="form-label">Daily Rate ($) *</label>
                            <input type="number" class="form-control" id="updateDailyRate" name="dailyRate" min="10" step="0.01" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="updateStatus" class="form-label">Status *</label>
                            <select class="form-select" id="updateStatus" name="status" required>
                                <option value="available">Available</option>
                                <option value="rented">Rented</option>
                                <option value="maintenance">Under Maintenance</option>
                                <option value="out-of-service">Out of Service</option>
                            </select>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="updateDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="updateDescription" name="description" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-warning" onclick="submitUpdateCar()">
                    <i class="bi bi-pencil-square"></i> Update Car
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Remove Car Modal -->
<div class="modal fade" id="removeCarModal" tabindex="-1" aria-labelledby="removeCarModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="removeCarModalLabel">
                    <i class="bi bi-trash"></i> Remove Car from Fleet
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle"></i>
                    <strong>Warning:</strong> This action cannot be undone. The car will be permanently removed from the fleet.
                </div>
                <form id="removeCarForm">
                    <div class="mb-3">
                        <label for="removeCarId" class="form-label">Select Car to Remove *</label>
                        <select class="form-select" id="removeCarId" name="carId" required>
                            <option value="">Select a car to remove</option>
                            <option value="1">Toyota Camry - ABC-123</option>
                            <option value="2">Honda Civic - XYZ-789</option>
                            <option value="3">Ford F-150 - DEF-456</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="removalReason" class="form-label">Reason for Removal *</label>
                        <select class="form-select" id="removalReason" name="reason" required>
                            <option value="">Select reason</option>
                            <option value="sold">Sold</option>
                            <option value="scrapped">Scrapped</option>
                            <option value="accident">Accident Damage</option>
                            <option value="mechanical">Mechanical Issues</option>
                            <option value="other">Other</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="removalNotes" class="form-label">Additional Notes</label>
                        <textarea class="form-control" id="removalNotes" name="notes" rows="3" placeholder="Provide additional details..."></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="submitRemoveCar()">
                    <i class="bi bi-trash"></i> Remove Car
                </button>
            </div>
        </div>
    </div>
</div>

<!-- View All Cars Modal -->
<div class="modal fade" id="viewAllCarsModal" tabindex="-1" aria-labelledby="viewAllCarsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="viewAllCarsModalLabel">
                    <i class="bi bi-list-ul"></i> Fleet Overview
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Filter Section -->
                <div class="row mb-3">
                    <div class="col-md-3">
                        <label for="filterVehicleType" class="form-label">Vehicle Type</label>
                        <select class="form-select" id="filterVehicleType">
                            <option value="">All Types</option>
                            <option value="motor-bike">Motor Bike</option>
                            <option value="cng">CNG</option>
                            <option value="private-car">Private Car</option>
                            <option value="pickup">Pickup</option>
                            <option value="truck">Truck</option>
                            <option value="covered-van">Covered Van</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="filterStatus" class="form-label">Status</label>
                        <select class="form-select" id="filterStatus">
                            <option value="">All Status</option>
                            <option value="available">Available</option>
                            <option value="rented">Rented</option>
                            <option value="maintenance">Under Maintenance</option>
                            <option value="out-of-service">Out of Service</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="filterMake" class="form-label">Make</label>
                        <input type="text" class="form-control" id="filterMake" placeholder="Search by make...">
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">&nbsp;</label>
                        <button type="button" class="btn btn-primary w-100" onclick="applyFilters()">
                            <i class="bi bi-search"></i> Filter
                        </button>
                    </div>
                </div>

                <!-- Fleet Table -->
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>ID</th>
                                <th>Vehicle Type</th>
                                <th>Make</th>
                                <th>Model</th>
                                <th>License Plate</th>
                                <th>Status</th>
                                <th>Daily Rate</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="fleetTableBody">
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-success" onclick="exportFleetData()">
                    <i class="bi bi-download"></i> Export Data
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Car Modal -->
<div class="modal fade" id="editCarModal" tabindex="-1" aria-labelledby="editCarModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title" id="editCarModalLabel">
                    <i class="bi bi-pencil-square"></i> Edit Vehicle Information
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editCarForm">
                    <input type="hidden" id="editVehicleId" name="id">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editVehicleType" class="form-label">Vehicle Type *</label>
                            <select class="form-select" id="editVehicleType" name="vehicleType" required>
                                <option value="">Select Vehicle Type</option>
                                <option value="motor-bike">Motor Bike</option>
                                <option value="cng">CNG</option>
                                <option value="private-car">Private Car</option>
                                <option value="pickup">Pickup</option>
                                <option value="truck">Truck</option>
                                <option value="covered-van">Covered Van</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editModel" class="form-label">Model *</label>
                            <input type="text" class="form-control" id="editModel" name="model" placeholder="e.g., Camry, Civic" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editYear" class="form-label">Year *</label>
                            <input type="number" class="form-control" id="editYear" name="year" min="2000" max="2025" placeholder="2024" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editRegistrationNumber" class="form-label">Registration Number *</label>
                            <input type="text" class="form-control" id="editRegistrationNumber" name="registrationNumber" placeholder="e.g., ABC-123" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editChassisNumber" class="form-label">Chassis Number *</label>
                            <input type="text" class="form-control" id="editChassisNumber" name="chassisNumber" placeholder="e.g., 1HGBH41JXMN109186" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editColor" class="form-label">Color *</label>
                            <input type="text" class="form-control" id="editColor" name="color" placeholder="e.g., Red, Blue" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editEngineCapacity" class="form-label">Engine Capacity (CC) *</label>
                            <input type="text" class="form-control" id="editEngineCapacity" name="engineCapacity" placeholder="e.g., 100cc, 2400cc" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editFuelType" class="form-label">Fuel Type *</label>
                            <select class="form-select" id="editFuelType" name="fuelType" required>
                                <option value="">Select Fuel Type</option>
                                <option value="petrol">Petrol</option>
                                <option value="diesel">Diesel</option>
                                <option value="electric">Electric</option>
                                <option value="hybrid">Hybrid</option>
                                <option value="cng">CNG</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editDailyRate" class="form-label">Daily Rate ($) *</label>
                            <input type="number" class="form-control" id="editDailyRate" name="dailyRate" min="10" step="0.01" placeholder="50.00" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editSeats" class="form-label">Number of Seats</label>
                            <input type="number" class="form-control" id="editSeats" name="seats" min="1" max="50" placeholder="5">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editStatus" class="form-label">Status *</label>
                            <select class="form-select" id="editStatus" name="status" required>
                                <option value="available">Available</option>
                                <option value="rented">Rented</option>
                                <option value="maintenance">Under Maintenance</option>
                                <option value="out-of-service">Out of Service</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editVehicleImage" class="form-label">Update Image</label>
                            <input type="file" class="form-control" id="editVehicleImage" name="vehicleImage" accept="image/*">
                            <small class="form-text text-muted">Leave empty to keep current image</small>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="editDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="editDescription" name="description" rows="3" placeholder="Additional details about the vehicle..."></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="editFeatures" class="form-label">Features</label>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="editAc" name="features" value="ac">
                                    <label class="form-check-label" for="editAc">Air Conditioning</label>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="editGps" name="features" value="gps">
                                    <label class="form-check-label" for="editGps">GPS Navigation</label>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="editBluetooth" name="features" value="bluetooth">
                                    <label class="form-check-label" for="editBluetooth">Bluetooth</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-warning" onclick="submitEditCar()">
                    <i class="bi bi-pencil-square"></i> Update Vehicle
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Confirm Add Vehicle Modal -->
<div class="modal fade" id="confirmAddModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="bi bi-eye"></i> Review Vehicle Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row g-3">
                    <div class="col-md-5 text-center">
                        <img id="previewImage" src="#" alt="Vehicle Image" class="img-fluid rounded" style="max-height: 260px; object-fit: cover; display:none;" />
                        <div id="previewImageFallback" class="text-muted" style="display:none;">
                            <i class="bi bi-image" style="font-size: 4rem;"></i>
                            <div>No image selected</div>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <table class="table table-sm">
                            <tbody>
                                <tr><th>Type</th><td id="pv_type"></td></tr>
                                <tr><th>Model</th><td id="pv_model"></td></tr>
                                <tr><th>Year</th><td id="pv_year"></td></tr>
                                <tr><th>Registration</th><td id="pv_reg"></td></tr>
                                <tr><th>Chassis</th><td id="pv_chassis"></td></tr>
                                <tr><th>Color</th><td id="pv_color"></td></tr>
                                <tr><th>Engine</th><td id="pv_engine"></td></tr>
                                <tr><th>Fuel</th><td id="pv_fuel"></td></tr>
                                <tr><th>Seats</th><td id="pv_seats"></td></tr>
                                <tr><th>Rate</th><td id="pv_rate"></td></tr>
                                <tr><th>Status</th><td id="pv_status"></td></tr>
                                <tr><th>Description</th><td id="pv_desc"></td></tr>
                                <tr><th>Features</th><td id="pv_features"></td></tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Edit</button>
                <button type="button" class="btn btn-primary" onclick="confirmSubmitAddCar()">
                    <i class="bi bi-check2-circle"></i> Confirm & Submit
                </button>
            </div>
        </div>
    </div>
    </div>

<script>
// Holds staged data between preview and submit
let pendingVehicleData = null;
let pendingImageFile = null;
// Cached fleet for filtering in Fleet Overview
let fleetVehicles = [];
// Add New Car Function
function submitAddCar() {
    const form = document.getElementById('addCarForm');
    if (form.checkValidity()) {
        // Collect form data
        const formData = new FormData(form);
        const carData = Object.fromEntries(formData);
        
        // Collect features
        const features = [];
        const featureCheckboxes = form.querySelectorAll('input[name="features"]:checked');
        featureCheckboxes.forEach(checkbox => {
            features.push(checkbox.value);
        });
        
        // Stage data for preview
        pendingImageFile = form.querySelector('input[name="vehicleImage"]').files[0] || null;
        pendingVehicleData = {
            vehicleType: carData.vehicleType,
            model: carData.model,
            year: parseInt(carData.year),
            registrationNumber: carData.registrationNumber,
            chassisNumber: carData.chassisNumber,
            color: carData.color,
            engineCapacity: carData.engineCapacity,
            fuelType: carData.fuelType,
            dailyRate: parseFloat(carData.dailyRate),
            seats: parseInt(carData.seats),
            status: carData.status, // Add status to staged data
            imageUrl: '',
            description: carData.description || '',
            features: features
        };

        // Populate preview UI
        document.getElementById('pv_type').innerText = pendingVehicleData.vehicleType;
        document.getElementById('pv_model').innerText = pendingVehicleData.model;
        document.getElementById('pv_year').innerText = isNaN(pendingVehicleData.year) ? '' : pendingVehicleData.year;
        document.getElementById('pv_reg').innerText = pendingVehicleData.registrationNumber;
        document.getElementById('pv_chassis').innerText = pendingVehicleData.chassisNumber;
        document.getElementById('pv_color').innerText = pendingVehicleData.color;
        document.getElementById('pv_engine').innerText = pendingVehicleData.engineCapacity;
        document.getElementById('pv_fuel').innerText = pendingVehicleData.fuelType;
        document.getElementById('pv_seats').innerText = pendingVehicleData.seats || '';
        document.getElementById('pv_rate').innerText = pendingVehicleData.dailyRate ? `$${pendingVehicleData.dailyRate}/day` : '';
        document.getElementById('pv_status').innerText = pendingVehicleData.status;
        document.getElementById('pv_desc').innerText = pendingVehicleData.description;
        document.getElementById('pv_features').innerText = pendingVehicleData.features.join(', ');

        const imgEl = document.getElementById('previewImage');
        const fallbackEl = document.getElementById('previewImageFallback');
        if (pendingImageFile) {
            imgEl.src = URL.createObjectURL(pendingImageFile);
            imgEl.style.display = 'block';
            fallbackEl.style.display = 'none';
        } else {
            imgEl.style.display = 'none';
            fallbackEl.style.display = 'block';
        }

        // Show preview modal
        const confirmModal = new bootstrap.Modal(document.getElementById('confirmAddModal'));
        confirmModal.show();
    } else {
        form.reportValidity();
    }
}

// Confirm and submit after preview
function confirmSubmitAddCar() {
    if (!pendingVehicleData) return;

    const uploadPromise = pendingImageFile ? (async () => {
        const imgForm = new FormData();
        imgForm.append('file', pendingImageFile);
        const res = await fetch('@Url.Action("UploadVehicleImage", "Home")', { method: 'POST', body: imgForm });
        const json = await res.json();
        if (!json.success) throw new Error(json.message || 'Image upload failed');
        return json.url;
    })() : Promise.resolve('');

    uploadPromise
        .then((uploadedUrl) => {
            pendingVehicleData.imageUrl = uploadedUrl || '';
            return fetch('@Url.Action("AddVehicle", "Home")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(pendingVehicleData)
            });
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Close both modals
                const addModal = bootstrap.Modal.getInstance(document.getElementById('addCarModal'));
                if (addModal) addModal.hide();
                const confirmModalEl = document.getElementById('confirmAddModal');
                const confirmModal = bootstrap.Modal.getInstance(confirmModalEl);
                if (confirmModal) confirmModal.hide();

                // Reset state and form
                pendingVehicleData = null;
                pendingImageFile = null;
                const form = document.getElementById('addCarForm');
                form.reset();

                // Redirect to Available Cars page to show the newly added car
                if (data.redirectUrl) {
                    window.location.href = data.redirectUrl;
                } else {
                    window.location.href = '@Url.Action("AvailableCars", "Home")';
                }
            } else {
                alert('Error: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error adding car. Please try again.');
        });
}

// Update Car Function
function submitUpdateCar() {
    const form = document.getElementById('updateCarForm');
    if (form.checkValidity()) {
        const formData = new FormData(form);
        const carData = Object.fromEntries(formData);
        
        alert('Car updated successfully!');
        
        const modal = bootstrap.Modal.getInstance(document.getElementById('updateCarModal'));
        modal.hide();
        form.reset();
    } else {
        form.reportValidity();
    }
}

// Remove Car Function
function submitRemoveCar() {
    const form = document.getElementById('removeCarForm');
    if (form.checkValidity()) {
        const formData = new FormData(form);
        const carData = Object.fromEntries(formData);
        
        if (!confirm('Are you sure you want to remove this car from the fleet?')) {
            return;
        }
        const vehicleId = carData.carId;
        if (!vehicleId) { alert('Please select a car.'); return; }
        // Try DELETE; if it fails, fallback to POST form endpoint
        fetch('@Url.Action("DeleteVehicle", "Home")/' + vehicleId, {
            method: 'DELETE',
            headers: { 'Accept': 'application/json' }
        })
        .then(async res => {
            if (res.ok) return res.json();
            // fallback
            const fd = new FormData();
            fd.append('id', vehicleId);
            const resp = await fetch('@Url.Action("DeleteVehiclePost", "Home")', { method: 'POST', body: fd });
            return resp.json();
        })
        .then(data => {
            if (data && data.success) {
                alert('Car removed successfully!');
                const modal = bootstrap.Modal.getInstance(document.getElementById('removeCarModal'));
                if (modal) modal.hide();
                form.reset();
            } else {
                alert('Failed to remove car: ' + (data && data.message ? data.message : 'Unknown error'));
            }
        })
        .catch(err => {
            console.error(err);
            alert('Error removing car.');
        });
    } else {
        form.reportValidity();
    }
}

// Render Fleet Table based on provided list
function renderFleetTable(list) {
    const tbody = document.getElementById('fleetTableBody');
    if (!Array.isArray(list) || list.length === 0) {
        tbody.innerHTML = '<tr><td colspan="8" class="text-center text-muted">No vehicles found.</td></tr>';
        return;
    }
    tbody.innerHTML = '';
    list.forEach(v => {
        const tr = document.createElement('tr');
        tr.innerHTML = `
            <td>${v.id}</td>
            <td><span class="badge bg-secondary">${v.vehicleType}</span></td>
            <td>${(v.model || '').split(' ')[0]}</td>
            <td>${v.model || ''}</td>
            <td>${v.registrationNumber || ''}</td>
            <td><span class="badge ${v.status?.toLowerCase()==='available' ? 'bg-success' : 'bg-warning'}">${v.status}</span></td>
            <td>$${Number(v.dailyRate || 0).toFixed(2)}</td>
            <td>
                <button class="btn btn-sm btn-warning" onclick="editCar(${v.id})"><i class="bi bi-pencil"></i></button>
                <button class="btn btn-sm btn-danger" onclick="removeCar(${v.id})"><i class="bi bi-trash"></i></button>
            </td>`;
        tbody.appendChild(tr);
    });
}

// Filter Functions
function applyFilters() {
    const vehicleType = (document.getElementById('filterVehicleType').value || '').toLowerCase();
    const status = (document.getElementById('filterStatus').value || '').toLowerCase();
    const make = (document.getElementById('filterMake').value || '').toLowerCase();

    let filtered = fleetVehicles.slice();
    if (vehicleType) {
        filtered = filtered.filter(v => (v.vehicleType || '').toLowerCase() === vehicleType);
    }
    if (status) {
        filtered = filtered.filter(v => (v.status || '').toLowerCase() === status);
    }
    if (make) {
        filtered = filtered.filter(v => (v.model || '').toLowerCase().includes(make));
    }
    renderFleetTable(filtered);
}

// Export Function
function exportFleetData() {
    alert('Fleet data exported successfully!');
}

// Edit Car Function
function editCar(carId) {
    // Close current modal
    const viewModal = bootstrap.Modal.getInstance(document.getElementById('viewAllCarsModal'));
    viewModal.hide();
    
    // Open update modal with car data
    setTimeout(() => {
        const updateModal = new bootstrap.Modal(document.getElementById('editCarModal'));
        updateModal.show();
        
        // Populate form with car data (this would come from database)
        document.getElementById('editVehicleId').value = carId;
        const carToEdit = fleetVehicles.find(v => v.id === carId);
        if (carToEdit) {
            document.getElementById('editVehicleType').value = carToEdit.vehicleType;
            document.getElementById('editModel').value = carToEdit.model;
            document.getElementById('editYear').value = carToEdit.year;
            document.getElementById('editRegistrationNumber').value = carToEdit.registrationNumber;
            document.getElementById('editChassisNumber').value = carToEdit.chassisNumber;
            document.getElementById('editColor').value = carToEdit.color;
            document.getElementById('editEngineCapacity').value = carToEdit.engineCapacity;
            document.getElementById('editFuelType').value = carToEdit.fuelType;
            document.getElementById('editDailyRate').value = carToEdit.dailyRate;
            document.getElementById('editSeats').value = carToEdit.seats || '';
            document.getElementById('editStatus').value = carToEdit.status;
            document.getElementById('editDescription').value = carToEdit.description || '';

            // Populate features
            document.getElementById('editAc').checked = carToEdit.features.includes('ac');
            document.getElementById('editGps').checked = carToEdit.features.includes('gps');
            document.getElementById('editBluetooth').checked = carToEdit.features.includes('bluetooth');
        }
    }, 500);
}

// Submit Edit Car Function
function submitEditCar() {
    const form = document.getElementById('editCarForm');
    if (!form.checkValidity()) {
        form.reportValidity();
        return;
    }
    
    const formData = new FormData(form);
    const vehicleData = Object.fromEntries(formData);
    
    // Collect features
    const features = [];
    const featureCheckboxes = form.querySelectorAll('input[name="features"]:checked');
    featureCheckboxes.forEach(checkbox => {
        features.push(checkbox.value);
    });
    
    const updateData = {
        id: parseInt(vehicleData.id),
        vehicleType: vehicleData.vehicleType,
        model: vehicleData.model,
        year: parseInt(vehicleData.year),
        registrationNumber: vehicleData.registrationNumber,
        chassisNumber: vehicleData.chassisNumber,
        color: vehicleData.color,
        engineCapacity: vehicleData.engineCapacity,
        fuelType: vehicleData.fuelType,
        dailyRate: parseFloat(vehicleData.dailyRate),
        seats: parseInt(vehicleData.seats) || 0,
        status: vehicleData.status,
        description: vehicleData.description || '',
        features: features
    };
    
    // Handle image upload if new image is selected
    const imageFile = document.getElementById('editVehicleImage').files[0];
    if (imageFile) {
        const imgForm = new FormData();
        imgForm.append('file', imageFile);
        
        fetch('@Url.Action("UploadVehicleImage", "Home")', { method: 'POST', body: imgForm })
            .then(res => res.json())
            .then(json => {
                if (json.success) {
                    updateData.imageUrl = json.url;
                    submitUpdateRequest(updateData);
                } else {
                    throw new Error(json.message || 'Image upload failed');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error uploading image. Please try again.');
            });
    } else {
        submitUpdateRequest(updateData);
    }
}

function submitUpdateRequest(updateData) {
    fetch('@Url.Action("UpdateVehicle", "Home")', {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(updateData)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('Vehicle updated successfully!');
            
            // Close edit modal
            const editModal = bootstrap.Modal.getInstance(document.getElementById('editCarModal'));
            if (editModal) editModal.hide();
            
            // Reset form
            document.getElementById('editCarForm').reset();
            
            // Refresh fleet data
            const event = new Event('show.bs.modal');
            document.getElementById('viewAllCarsModal').dispatchEvent(event);
        } else {
            alert('Error: ' + data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Error updating vehicle. Please try again.');
    });
}

// Remove Car Function (from table)
function removeCar(carId) {
    if (!confirm('Are you sure you want to remove this car from the fleet?')) return;
    fetch('@Url.Action("DeleteVehicle", "Home")/' + carId, {
        method: 'DELETE',
        headers: { 'Accept': 'application/json' }
    })
    .then(async res => {
        if (res.ok) return res.json();
        // fallback to POST form
        const fd = new FormData();
        fd.append('id', carId);
        const resp = await fetch('@Url.Action("DeleteVehiclePost", "Home")', { method: 'POST', body: fd });
        return resp.json();
    })
    .then(data => {
        if (data && data.success) {
            alert('Car removed successfully!');
            // Refresh fleet modal table
            const event = new Event('show.bs.modal');
            document.getElementById('viewAllCarsModal').dispatchEvent(event);
        } else {
            alert('Failed to remove car: ' + (data && data.message ? data.message : 'Unknown error'));
        }
    })
    .catch(err => {
        console.error(err);
        alert('Error removing car.');
    });
}

// Populate fleet modal on open
document.getElementById('viewAllCarsModal')?.addEventListener('show.bs.modal', async function () {
    const tbody = document.getElementById('fleetTableBody');
    tbody.innerHTML = '<tr><td colspan="8" class="text-center text-muted">Loading...</td></tr>';
    try {
        const res = await fetch('@Url.Action("GetFleet", "Home")');
        const vehicles = await res.json();
        if (!Array.isArray(vehicles)) throw new Error('Invalid response');
        fleetVehicles = vehicles;
        applyFilters(); // render with current filters (defaults to all)
    } catch (e) {
        console.error(e);
        tbody.innerHTML = '<tr><td colspan="8" class="text-center text-danger">Failed to load fleet.</td></tr>';
    }
});

// Live filter on change
document.getElementById('filterVehicleType')?.addEventListener('change', applyFilters);
document.getElementById('filterStatus')?.addEventListener('change', applyFilters);
document.getElementById('filterMake')?.addEventListener('input', function() {
    // Debounce typing a bit
    clearTimeout(this._debounce);
    this._debounce = setTimeout(applyFilters, 200);
});

// Auto-populate update form when car is selected
document.getElementById('updateCarId').addEventListener('change', function() {
    const carId = this.value;
    if (carId) {
        // Simulate loading car data
        document.getElementById('updateVehicleType').value = 'private-car';
        document.getElementById('updateMake').value = 'Toyota';
        document.getElementById('updateModel').value = 'Camry';
        document.getElementById('updateDailyRate').value = '75.00';
        document.getElementById('updateStatus').value = 'available';
        document.getElementById('updateDescription').value = 'Well-maintained sedan';
    }
});
</script>

<style>
    .sidebar {
        width: 250px;
    min-height: 100vh;
    }
    
    .border-left-primary {
        border-left: 0.25rem solid #4e73df !important;
    }
    
    .border-left-success {
        border-left: 0.25rem solid #1cc88a !important;
    }
    
    .border-left-info {
        border-left: 0.25rem solid #36b9cc !important;
    }
    
    .border-left-warning {
        border-left: 0.25rem solid #f6c23e !important;
    }
    
    .border-left-danger {
        border-left: 0.25rem solid #e74a3b !important;
    }
    
    .text-gray-300 {
        color: #dddfeb !important;
    }
    
    .text-gray-800 {
        color: #5a5c69 !important;
    }

    /* Red asterisk for required fields */
    .form-label:after {
        content: " *";
        color: #dc3545;
        font-weight: bold;
    }

    /* Responsive Design */
    @@media (max-width: 767.98px) {
        .sidebar {
             position: fixed;
        width: 100%;
        margin-left: 0;
        }
        
        .sidebar.show {
            transform: translateX(0);
        }
        
        .sidebar.collapse:not(.show) {
            display: none !important;
        }
        
        main {
           margin-left: 0;
        width: 100%;
        }
        
        .card-body {
            padding: 1rem;
        }
        
        .btn-group {
            flex-direction: column;
            width: 100%;
        }
        
        .btn-group .btn {
            margin-bottom: 0.5rem;
        }
        
        .d-flex.flex-column.flex-sm-row {
            gap: 0.5rem;
        }
    }

    @@media (max-width: 575.98px) {
        .container-fluid {
            padding-left: 0;
            padding-right: 0;
        }
        
        .card {
            margin-bottom: 1rem;
        }
        
        .h2 {
            font-size: 1.5rem;
        }
        
        .fa-2x {
            font-size: 1.5em;
        }
        
        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }
    }

    @@media (min-width: 768px) and (max-width: 991.98px) {
        .sidebar {
            position: relative !important;
            transform: none !important;
            width: 25% !important;
            display: block !important;
        }
        
        main {
            
            width: 75% !important;
        }
    }

    @@media (min-width: 992px) {
        .sidebar {
            position: relative !important;
            transform: none !important;
            width: 16.666667% !important;
            display: block !important;
        }
        
        main {
            margin-left: 16.666667% !important;
            width: 83.333333% !important;
        }
    }

    /* Smooth transitions */
    .card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }
    
    .card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    
    /* Mobile navigation improvements */
    .navbar-toggler {
        border: none;
        padding: 0.25rem 0.5rem;
    }
    
    .navbar-toggler:focus {
        box-shadow: none;
    }
    
    /* Ensure proper spacing on all devices */
    .row {
        margin-left: 0;
        margin-right: 0;
    }
    
    .col-12, .col-sm-6, .col-md-4, .col-md-6, .col-lg-8, .col-lg-4, .col-xl-3 {
        padding-left: 0;
        padding-right: 0;
    }

    /* Sidebar specific fixes */
    .sidebar {
        min-height: 100vh;
        overflow-y: auto;
    }

    /* Ensure sidebar is visible on desktop */
    @@media (min-width: 768px) {
        .sidebar.collapse:not(.show) {
            display: block !important;
        }
    }

    /* Set left margin to 0 for all elements */
    .container-fluid,
    .row,
    .col-12, .col-sm-6, .col-md-4, .col-md-6, .col-lg-8, .col-lg-4, .col-xl-3,
    main,
    .card,
    .card-body {
        margin-left: 0 !important;
        padding-left: 0 !important;
    }

    /* Mobile sidebar overlay */
    @@media (max-width: 767.98px) {
        .sidebar {
            background-color: rgba(33, 37, 41, 0.95) !important;
        }
        
        /* Add backdrop when sidebar is open */
        .sidebar.show::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: -1;
        }
    }
</style>
